{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-around;\\n    align-items: center;\\n    margin: 2%;\\n  \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport CharCardList from \"./components/CardComponents/CharCardList\";\nimport { Button } from \"reactstrap\";\nimport Find from \"../src/components/FindComponent/Find\";\nimport styled from \"styled-components\";\n\nconst App = ({\n  key\n}) => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n  // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a\n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showContent = _useState2[0],\n        setShowContent = _useState2[1];\n\n  const Wrapper = styled.div(_templateObject());\n\n  function toggleContentHandler() {\n    const doesShow = showContent;\n    setShowContent(!doesShow);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: toggleContentHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Explore the Characters\"), React.createElement(Find, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), showContent ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(CharCardList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })) : null);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/src/App.js"],"names":["React","useState","CharCardList","Button","Find","styled","App","key","showContent","setShowContent","Wrapper","div","toggleContentHandler","doesShow"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,sCAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACvB;AACA;AAEA;AACA;AACA;AANuB,oBAQeN,QAAQ,CAAC,KAAD,CARvB;AAAA;AAAA,QAQhBO,WARgB;AAAA,QAQHC,cARG;;AAUvB,QAAMC,OAAO,GAAGL,MAAM,CAACM,GAAV,mBAAb;;AAOA,WAASC,oBAAT,GAAgC;AAC9B,UAAMC,QAAQ,GAAGL,WAAjB;AACAC,IAAAA,cAAc,CAAC,CAACI,QAAF,CAAd;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAMGJ,WAAW,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADU,GAIR,IAVN,CADF;AAcD,CApCD;;AAsCA,eAAeF,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport CharCardList from \"./components/CardComponents/CharCardList\";\nimport { Button } from \"reactstrap\";\nimport Find from \"../src/components/FindComponent/Find\";\nimport styled from \"styled-components\";\n\nconst App = ({ key }) => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n\n  // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a\n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n\n  const [showContent, setShowContent] = useState(false);\n\n  const Wrapper = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2%;\n  `;\n\n  function toggleContentHandler() {\n    const doesShow = showContent;\n    setShowContent(!doesShow);\n  }\n\n  return (\n    <div>\n      <Wrapper>\n        <Button onClick={toggleContentHandler}>Explore the Characters</Button>\n        <Find />\n      </Wrapper>\n\n      {showContent ? (\n        <div>\n          <CharCardList />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}