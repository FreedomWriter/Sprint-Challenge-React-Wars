{"ast":null,"code":"import _slicedToArray from \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/src/components/HeaderComponet/NavBar.js\";\nimport React, { useState } from \"react\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport CharCardList from \"../CharCardComponents/CharCardList\";\nimport MovCardList from \"../MovCardComponent/MovieCardList\";\nimport FindChar from \"../FindComponent/FindChar\";\nimport FindMov from \"../FindComponent/FindMov\";\nexport default function NavBar() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setIsOpen = _useState2[1];\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showCharContent = _useState4[0],\n        setShowCharContent = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showMovContent = _useState6[0],\n        setShowMovContent = _useState6[1];\n\n  function toggleCharContentHandler() {\n    const doesCharShow = showCharContent;\n    setShowCharContent(!doesCharShow);\n\n    if (doesCharShow === true) {\n      setShowMovContent(false);\n    }\n  }\n\n  function toggleMovContentHandler() {\n    const doesMovShow = showMovContent;\n    setShowMovContent(!doesMovShow);\n  }\n\n  function selectCharHandler() {\n    console.log(\" from the select handler\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    color: \"light\",\n    light: true,\n    expand: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(NavbarBrand, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://reactjs.org/docs/getting-started.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"ReactWars\")), React.createElement(NavbarToggler, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Collapse, {\n    isOpen: isOpen,\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"ml-auto\",\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(UncontrolledDropdown, {\n    nav: true,\n    inNavbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    nav: true,\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Characters\"), React.createElement(DropdownMenu, {\n    right: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Learn More\"), React.createElement(FindChar, {\n    onClick: selectCharHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(DropdownItem, {\n    divider: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(DropdownItem, {\n    onClick: toggleCharContentHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Show/Hide Character Cards\"))), React.createElement(UncontrolledDropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    nav: true,\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Movies\"), React.createElement(DropdownMenu, {\n    right: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Learn More\"), React.createElement(FindMov, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(DropdownItem, {\n    divider: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(DropdownItem, {\n    onClick: toggleMovContentHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Show All/Hide Movie Summaries\"))))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, showCharContent ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(CharCardList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })) : null, showMovContent ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(MovCardList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })) : null));\n}","map":{"version":3,"sources":["/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/src/components/HeaderComponet/NavBar.js"],"names":["React","useState","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","CharCardList","MovCardList","FindChar","FindMov","NavBar","isOpen","setIsOpen","toggle","showCharContent","setShowCharContent","showMovContent","setShowMovContent","toggleCharContentHandler","doesCharShow","toggleMovContentHandler","doesMovShow","selectCharHandler","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport CharCardList from \"../CharCardComponents/CharCardList\";\nimport MovCardList from \"../MovCardComponent/MovieCardList\";\nimport FindChar from \"../FindComponent/FindChar\";\nimport FindMov from \"../FindComponent/FindMov\";\n\nexport default function NavBar() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const [showCharContent, setShowCharContent] = useState(false);\n  const [showMovContent, setShowMovContent] = useState(false);\n\n  function toggleCharContentHandler() {\n    const doesCharShow = showCharContent;\n    setShowCharContent(!doesCharShow);\n    if (doesCharShow === true) {\n      setShowMovContent(false);\n    }\n  }\n  function toggleMovContentHandler() {\n    const doesMovShow = showMovContent;\n    setShowMovContent(!doesMovShow);\n  }\n\n  function selectCharHandler() {\n    console.log(\" from the select handler\");\n  }\n\n  return (\n    <div>\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand>\n            <a href=\"https://reactjs.org/docs/getting-started.html\">\n              ReactWars\n            </a>\n          </NavbarBrand>\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Characters\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>Learn More</DropdownItem>\n                  <FindChar onClick={selectCharHandler} />\n                  <DropdownItem divider />\n                  <DropdownItem onClick={toggleCharContentHandler}>\n                    Show/Hide Character Cards\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <UncontrolledDropdown>\n                <DropdownToggle nav caret>\n                  Movies\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>Learn More</DropdownItem>\n                  <FindMov />\n                  <DropdownItem divider />\n                  <DropdownItem onClick={toggleMovContentHandler}>\n                    Show All/Hide Movie Summaries\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n\n      <div>\n        {showCharContent ? (\n          <div>\n            <CharCardList />\n          </div>\n        ) : null}\n        {showMovContent ? (\n          <div>\n            <MovCardList />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}