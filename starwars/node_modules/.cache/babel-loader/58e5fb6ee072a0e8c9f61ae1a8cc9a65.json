{"ast":null,"code":"import _slicedToArray from \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport CharCardList from \"./components/CharCardComponents/CharCardList\";\nimport MovCardList from \"./components/MovCardComponent/MovieCardList\";\n\nconst App = ({\n  key\n}) => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n  // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a\n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showContent = _useState2[0],\n        setShowContent = _useState2[1];\n\n  function toggleContentHandler() {\n    const doesShow = showContent;\n    setShowContent(!doesShow);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, showContent ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(CharCardList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(MovCardList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })) : null);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/src/App.js"],"names":["React","useState","CharCardList","MovCardList","App","key","showContent","setShowContent","toggleContentHandler","doesShow"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACvB;AACA;AAEA;AACA;AACA;AANuB,oBAQeJ,QAAQ,CAAC,KAAD,CARvB;AAAA;AAAA,QAQhBK,WARgB;AAAA,QAQHC,cARG;;AAUvB,WAASC,oBAAT,GAAgC;AAC9B,UAAMC,QAAQ,GAAGH,WAAjB;AACAC,IAAAA,cAAc,CAAC,CAACE,QAAF,CAAd;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,WAAW,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADU,GAKR,IANN,CADF;AAUD,CAzBD;;AA2BA,eAAeF,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport CharCardList from \"./components/CharCardComponents/CharCardList\";\nimport MovCardList from \"./components/MovCardComponent/MovieCardList\";\n\nconst App = ({ key }) => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n\n  // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a\n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n\n  const [showContent, setShowContent] = useState(false);\n\n  function toggleContentHandler() {\n    const doesShow = showContent;\n    setShowContent(!doesShow);\n  }\n\n  return (\n    <div>\n      {showContent ? (\n        <div>\n          <CharCardList />\n          <MovCardList />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}