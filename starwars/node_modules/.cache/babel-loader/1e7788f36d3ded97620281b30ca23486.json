{"ast":null,"code":"import _slicedToArray from \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/src/components/CardComponents/CardList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CardComp from \"./CardComp\";\nimport MovieComp from \"../MovieComp\";\nimport { Container, Row, Col } from \"reactstrap\"; // import { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\n\nexport default function CardList(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        char = _useState2[0],\n        setChar = _useState2[1];\n\n  useEffect(() => {\n    axios.get(\"https://swapi.co/api/people\").then(result => {\n      setChar(result.data.results);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(char);\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        film = _useState4[0],\n        setFilm = _useState4[1];\n\n  useEffect(() => {\n    axios.get(\"https://swapi.co/api/films/\").then(result => {\n      setFilm(result.data.results);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(film);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, char.map(character => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(CardComp //   key={character.id}\n    , {\n      name: character.name,\n      birthyear: character.birth_year,\n      home: character.home,\n      eye: character.eye_color,\n      film: film,\n      opening: film.opening_crawl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }), film.map(f => {\n    let fi = f;\n\n    if (f.title) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(MovieComp //   key={character.id}\n      , {\n        title: fi.title,\n        opening_crawl: fi.opening_crawl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/src/components/CardComponents/CardList.js"],"names":["React","useEffect","useState","axios","CardComp","MovieComp","Container","Row","Col","CardList","props","char","setChar","get","then","result","data","results","catch","err","console","log","film","setFilm","map","character","name","birth_year","home","eye_color","opening_crawl","f","fi","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC,C,CAEA;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,oBACdR,QAAQ,CAAC,EAAD,CADM;AAAA;AAAA,QAC/BS,IAD+B;AAAA,QACzBC,OADyB;;AAGtCX,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFU,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,MAAM,IAAI;AACdH,MAAAA,OAAO,CAACG,MAAM,CAACC,IAAP,CAAYC,OAAb,CAAP;AACD,KAJH,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;;AAbsC,qBAedT,QAAQ,CAAC,EAAD,CAfM;AAAA;AAAA,QAe/BoB,IAf+B;AAAA,QAezBC,OAfyB;;AAiBtCtB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFU,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,MAAM,IAAI;AACdQ,MAAAA,OAAO,CAACR,MAAM,CAACC,IAAP,CAAYC,OAAb,CAAP;AACD,KAJH,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,IAAI,CAACa,GAAL,CAASC,SAAS,IAAI;AACrB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,CACE;AADF;AAEE,MAAA,IAAI,EAAEA,SAAS,CAACC,IAFlB;AAGE,MAAA,SAAS,EAAED,SAAS,CAACE,UAHvB;AAIE,MAAA,IAAI,EAAEF,SAAS,CAACG,IAJlB;AAKE,MAAA,GAAG,EAAEH,SAAS,CAACI,SALjB;AAME,MAAA,IAAI,EAAEP,IANR;AAOE,MAAA,OAAO,EAAEA,IAAI,CAACQ,aAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAaD,GAdA,CADH,EAkBGR,IAAI,CAACE,GAAL,CAASO,CAAC,IAAI;AACb,QAAIC,EAAE,GAAGD,CAAT;;AACA,QAAIA,CAAC,CAACE,KAAN,EAAa;AACX,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,CACE;AADF;AAGE,QAAA,KAAK,EAAED,EAAE,CAACC,KAHZ;AAIE,QAAA,aAAa,EAAED,EAAE,CAACF,aAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD;AACF,GAdA,CAlBH,CADF,CADF,CADF;AAwCD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CardComp from \"./CardComp\";\nimport MovieComp from \"../MovieComp\";\nimport { Container, Row, Col } from \"reactstrap\";\n\n// import { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\n\nexport default function CardList(props) {\n  const [char, setChar] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://swapi.co/api/people\")\n      .then(result => {\n        setChar(result.data.results);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n  console.log(char);\n\n  const [film, setFilm] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://swapi.co/api/films/\")\n      .then(result => {\n        setFilm(result.data.results);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n  console.log(film);\n\n  return (\n    <Container>\n      <Row>\n        <Col xs=\"6\">\n          {char.map(character => {\n            return (\n              <div>\n                <CardComp\n                  //   key={character.id}\n                  name={character.name}\n                  birthyear={character.birth_year}\n                  home={character.home}\n                  eye={character.eye_color}\n                  film={film}\n                  opening={film.opening_crawl}\n                />\n              </div>\n            );\n          })}\n          {/* </div> */}\n          {/* <div> */}\n          {film.map(f => {\n            let fi = f;\n            if (f.title) {\n              return (\n                <div>\n                  <MovieComp\n                    //   key={character.id}\n\n                    title={fi.title}\n                    opening_crawl={fi.opening_crawl}\n                  />\n                </div>\n              );\n            }\n          })}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}