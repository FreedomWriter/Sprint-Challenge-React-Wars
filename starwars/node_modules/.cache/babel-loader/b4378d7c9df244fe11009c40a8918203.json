{"ast":null,"code":"import _slicedToArray from \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/src/components/HeaderComponet/NavBar.js\";\nimport React, { useState } from \"react\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport CharCardList from \"../CharCardComponents/CharCardList\";\nimport MovCardList from \"../MovCardComponent/MovieCardList\";\nimport Find from \"../FindComponent/Find\";\nexport default function NavBar() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setIsOpen = _useState2[1];\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showCharContent = _useState4[0],\n        setShowCharContent = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showMovContent = _useState6[0],\n        setShowMovContent = _useState6[1]; // const Wrapper = styled.div`\n  //   display: flex;\n  //   justify-content: space-around;\n  //   align-items: center;\n  //   margin: 2%;\n  // `;\n\n\n  function toggleCharContentHandler() {\n    const doesCharShow = showCharContent;\n    setShowCharContent(!doesCharShow);\n  }\n\n  function toggleMovContentHandler() {\n    const doesMovShow = showMovContent;\n    setShowMovContent(!doesMovShow);\n  } //   <Wrapper>\n  //   <Button onClick={toggleContentHandler}>Explore the Characters</Button>\n  //   <Find />\n  // </Wrapper>\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    color: \"light\",\n    light: true,\n    expand: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(NavbarBrand, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"ReactWars\"), React.createElement(NavbarToggler, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Collapse, {\n    isOpen: isOpen,\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"ml-auto\",\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    onClick: toggleCharContentHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Characters\")), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    onClick: toggleMovContentHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Movies\")), React.createElement(UncontrolledDropdown, {\n    nav: true,\n    inNavbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    nav: true,\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Options\"), React.createElement(DropdownMenu, {\n    right: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Option 1\"), React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Option 2\"), React.createElement(DropdownItem, {\n    divider: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Reset\"))))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, showCharContent ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(CharCardList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(MovCardList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })) : null, showMovContent ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(MovCardList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })) : null));\n}","map":{"version":3,"sources":["/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/src/components/HeaderComponet/NavBar.js"],"names":["React","useState","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","CharCardList","MovCardList","Find","NavBar","isOpen","setIsOpen","toggle","showCharContent","setShowCharContent","showMovContent","setShowMovContent","toggleCharContentHandler","doesCharShow","toggleMovContentHandler","doesMovShow"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport CharCardList from \"../CharCardComponents/CharCardList\";\nimport MovCardList from \"../MovCardComponent/MovieCardList\";\nimport Find from \"../FindComponent/Find\";\n\nexport default function NavBar() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const [showCharContent, setShowCharContent] = useState(false);\n  const [showMovContent, setShowMovContent] = useState(false);\n\n  // const Wrapper = styled.div`\n  //   display: flex;\n  //   justify-content: space-around;\n  //   align-items: center;\n  //   margin: 2%;\n  // `;\n\n  function toggleCharContentHandler() {\n    const doesCharShow = showCharContent;\n    setShowCharContent(!doesCharShow);\n  }\n  function toggleMovContentHandler() {\n    const doesMovShow = showMovContent;\n    setShowMovContent(!doesMovShow);\n  }\n  //   <Wrapper>\n  //   <Button onClick={toggleContentHandler}>Explore the Characters</Button>\n  //   <Find />\n  // </Wrapper>\n\n  return (\n    <div>\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">ReactWars</NavbarBrand>\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink onClick={toggleCharContentHandler}>Characters</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink onClick={toggleMovContentHandler}>Movies</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Options\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>Option 1</DropdownItem>\n                  <DropdownItem>Option 2</DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>Reset</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n      <div>\n        {showCharContent ? (\n          <div>\n            <CharCardList />\n            <MovCardList />\n          </div>\n        ) : null}\n        {showMovContent ? (\n          <div>\n            <MovCardList />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}