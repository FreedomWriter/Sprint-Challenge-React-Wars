{"ast":null,"code":"import _slicedToArray from \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/src/components/FindComponent/FindMov.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { DropdownItem } from \"reactstrap\";\nimport axios from \"axios\"; // import CardComp from \"../CardComponents/CardComp\";\n\nexport default function FindMov(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectFilm = _useState2[0],\n        setSelectFilm = _useState2[1];\n\n  useEffect(() => {\n    axios.get(\"https://swapi.co/api/films/\").then(result => {\n      setSelectFilm(result.data.results);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function selectMovHandler() {\n    const doesShow = selectFilm;\n    setSelectFilm(!doesShow);\n  } //   console.log(char);\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, selectFilm.map((title, index) => {\n    let thisTitle = title.title;\n    let thisLink = \"https://en.wikipedia.org/wiki/\" + thisTitle;\n    return React.createElement(DropdownItem, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: thisLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, title.title));\n  }));\n}","map":{"version":3,"sources":["/Users/queendavis/Documents/LambdaSchool/ReactModule/Sprint-Challenge-React-Wars/starwars/src/components/FindComponent/FindMov.js"],"names":["React","useEffect","useState","DropdownItem","axios","FindMov","props","selectFilm","setSelectFilm","get","then","result","data","results","catch","err","console","log","selectMovHandler","doesShow","map","title","index","thisTitle","thisLink"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,oBACDJ,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,QAC9BK,UAD8B;AAAA,QAClBC,aADkB;;AAGrCP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFK,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,MAAM,IAAI;AACdH,MAAAA,aAAa,CAACG,MAAM,CAACC,IAAP,CAAYC,OAAb,CAAb;AACD,KAJH,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;;AAWA,WAASG,gBAAT,GAA4B;AAC1B,UAAMC,QAAQ,GAAGZ,UAAjB;AACAC,IAAAA,aAAa,CAAC,CAACW,QAAF,CAAb;AACD,GAjBoC,CAkBrC;;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGZ,UAAU,CAACa,GAAX,CAAe,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChC,QAAIC,SAAS,GAAGF,KAAK,CAACA,KAAtB;AACA,QAAIG,QAAQ,GAAG,mCAAmCD,SAAlD;AACA,WACE,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAED,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAEE,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBH,KAAK,CAACA,KAA1B,CADF,CADF;AAKD,GARA,CARH,CADF;AAoBD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { DropdownItem } from \"reactstrap\";\nimport axios from \"axios\";\n// import CardComp from \"../CardComponents/CardComp\";\n\nexport default function FindMov(props) {\n  const [selectFilm, setSelectFilm] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://swapi.co/api/films/\")\n      .then(result => {\n        setSelectFilm(result.data.results);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n\n  function selectMovHandler() {\n    const doesShow = selectFilm;\n    setSelectFilm(!doesShow);\n  }\n  //   console.log(char);\n\n  return (\n    <div>\n      {/* {selectFilm.map((title, index) => {\n        return (\n          <DropdownItem onClick={selectMovHandler} key={index}>\n            {title.title}\n          </DropdownItem>\n        );\n      })} */}\n      {selectFilm.map((title, index) => {\n        let thisTitle = title.title;\n        let thisLink = \"https://en.wikipedia.org/wiki/\" + thisTitle;\n        return (\n          <DropdownItem key={index}>\n            <a href={thisLink}>{title.title}</a>\n          </DropdownItem>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}